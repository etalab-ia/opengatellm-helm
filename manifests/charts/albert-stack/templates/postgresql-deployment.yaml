apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.config.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.config.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.config.db }}
            - name: POSTGRES_MULTIPLE_DATABASES
              value: {{ .Values.postgres.config.create_db }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data/
              subPath: pgdata
            {{- if .Values.postgres.scripts.enabled }}
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/postgres_entrypoint.sh
              subPath: postgres_entrypoint.sh
            {{- end }}
          {{- if .Values.postgres.healthcheck.enabled }}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.config.user }}
            initialDelaySeconds: {{ .Values.postgres.healthcheck.startupDelaySeconds }}
            periodSeconds: {{ .Values.postgres.healthcheck.intervalSeconds }}
            timeoutSeconds: {{ .Values.postgres.healthcheck.timeoutSeconds }}
            failureThreshold: {{ .Values.postgres.healthcheck.failureThreshold }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.config.user }}
            initialDelaySeconds: {{ .Values.postgres.healthcheck.startupDelaySeconds }}
            periodSeconds: {{ .Values.postgres.healthcheck.intervalSeconds }}
            timeoutSeconds: {{ .Values.postgres.healthcheck.timeoutSeconds }}
            failureThreshold: {{ .Values.postgres.healthcheck.failureThreshold }}
          {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-pvc
        {{- if .Values.postgres.scripts.enabled }}
        - name: init-script
          configMap:
            name: postgres-init-script
        {{- end }}