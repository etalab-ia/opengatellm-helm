{{- if .Values.whisperx.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whisper
  namespace: {{ .Values.global.namespace }}
  labels:
    app: whisper
    {{- include "opengatellm-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: whisperx
spec:
  replicas: {{ .Values.whisperx.replicas }}
  selector:
    matchLabels:
      app: whisper
  template:
    metadata:
      labels:
        app: whisper
    spec:
      securityContext:
        fsGroup: 1000
      nodeSelector:
        k8s.scaleway.com/pool-name: "gpu"
      volumes:
      - name: cache-volume
        persistentVolumeClaim:
          claimName: whisperx-models
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: {{ .Values.whisperx.shm.sizeLimit }}
      containers:
      - name: whisper
        image: {{ .Values.whisperx.image.repository }}:{{ .Values.whisperx.image.tag }}
        imagePullPolicy: {{ .Values.whisperx.image.pullPolicy }}
        env:
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.whisperx.secrets.huggingfaceToken.name }}
              key: {{ .Values.whisperx.secrets.huggingfaceToken.key }}
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.whisperx.secrets.apiKey.name }}
              key: {{ .Values.whisperx.secrets.apiKey.key }}
        ports:
        - containerPort: {{ .Values.whisperx.service.targetPort }}
        resources:
          limits:
            cpu: {{ .Values.whisperx.resources.limits.cpu | quote }}
            memory: {{ .Values.whisperx.resources.limits.memory }}
            nvidia.com/gpu: {{ .Values.whisperx.resources.limits.gpu }}
          requests:
            cpu: {{ .Values.whisperx.resources.requests.cpu | quote }}
            memory: {{ .Values.whisperx.resources.requests.memory }}
            nvidia.com/gpu: {{ .Values.whisperx.resources.requests.gpu }}
        volumeMounts:
        - mountPath: /data/models
          name: cache-volume
        - name: shm
          mountPath: /dev/shm
        readinessProbe:
          httpGet:
            path: {{ .Values.whisperx.probes.readiness.path }}
            port: {{ .Values.whisperx.service.targetPort }}
            httpHeaders:
            - name: Authorization
              value: "Bearer {{ .Values.whisperx.api_key }}"
          initialDelaySeconds: {{ .Values.whisperx.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.whisperx.probes.readiness.periodSeconds }}
        livenessProbe:
          httpGet:
            path: {{ .Values.whisperx.probes.liveness.path }}
            port: {{ .Values.whisperx.service.targetPort }}
            httpHeaders:
            - name: Authorization
              value: "Bearer {{ .Values.whisperx.api_key }}"
          initialDelaySeconds: {{ .Values.whisperx.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.whisperx.probes.liveness.periodSeconds }}
{{- end }}